{"ast":null,"code":"var _jsxFileName = \"/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/DarkModeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext({\n  isDarkMode: false,\n  toggleDarkMode: () => {}\n});\nexport const useDarkMode = () => {\n  _s();\n  return useContext(DarkModeContext);\n};\n_s(useDarkMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DarkModeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => setIsDarkMode(!isDarkMode);\n  useEffect(() => {\n    document.body.className = isDarkMode ? 'dark-mode' : 'light-mode';\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s2(DarkModeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = DarkModeProvider;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","DarkModeContext","isDarkMode","toggleDarkMode","useDarkMode","_s","DarkModeProvider","children","_s2","setIsDarkMode","document","body","className","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/DarkModeContext.js"],"sourcesContent":["import React, {createContext, useState, useContext, useEffect} from 'react';\n\nconst DarkModeContext = createContext({\n    isDarkMode: false,\n    toggleDarkMode: () => {},\n});\n\nexport const useDarkMode = () => useContext(DarkModeContext);\n\nexport const DarkModeProvider = ({ children }) => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    const toggleDarkMode = () => setIsDarkMode(!isDarkMode);\n\n    useEffect(() => {\n        document.body.className = isDarkMode ? 'dark-mode' : 'light-mode';\n    }, [isDarkMode]);\n\n    return (\n        <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\n            {children}\n        </DarkModeContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,eAAe,gBAAGN,aAAa,CAAC;EAClCO,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAEA,CAAA,KAAM,CAAC;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACI,eAAe,CAAC;AAAA;AAACI,EAAA,CAAhDD,WAAW;AAExB,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACN,UAAU,EAAEO,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,cAAc,GAAGA,CAAA,KAAMM,aAAa,CAAC,CAACP,UAAU,CAAC;EAEvDJ,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGV,UAAU,GAAG,WAAW,GAAG,YAAY;EACrE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACIF,OAAA,CAACC,eAAe,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEZ,UAAU;MAAEC;IAAe,CAAE;IAAAI,QAAA,EAC3DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACV,GAAA,CAdWF,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}