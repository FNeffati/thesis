{"ast":null,"code":"var _jsxFileName = \"/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/Twitter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styling/Twitter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Twitter({\n  timeFrame,\n  County,\n  AccountType,\n  onTweetsFetched\n}) {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const fetchTweets = () => {\n    fetch('http://127.0.0.1:5000/get_tweets', {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify([timeFrame, County, AccountType])\n    }).then(response => response.json()).then(data => {\n      setTweets(data);\n      onTweetsFetched(data); // Call the callback function with the fetched tweets\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    fetchTweets();\n  }, [timeFrame, County, AccountType]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const highlightText = (text, term) => {\n    const regex = new RegExp(term, 'gi');\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n  const filteredTweets = tweets.filter(tweet => tweet.text.toLowerCase().includes(searchTerm.toLowerCase()));\n  const [currentPage, setCurrentPage] = useState(1);\n  const [tweetsPerPage] = useState(10); // Adjust the number of tweets per page as needed\n\n  const indexOfLastTweet = currentPage * tweetsPerPage;\n  const indexOfFirstTweet = indexOfLastTweet - tweetsPerPage;\n  const currentTweets = filteredTweets.slice(indexOfFirstTweet, indexOfLastTweet);\n  const totalPages = Math.ceil(filteredTweets.length / tweetsPerPage);\n  const formatDate = dateObj => {\n    let isoDateString;\n    if (typeof dateObj === 'object' && dateObj.hasOwnProperty('$date')) {\n      isoDateString = dateObj['$date'];\n    } else {\n      isoDateString = dateObj;\n    }\n    const date = new Date(isoDateString);\n    if (isNaN(date.getTime())) {\n      console.error(\"Invalid Date:\", isoDateString);\n      return \"Invalid Date\";\n    }\n    return date.toLocaleDateString(\"en-US\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"TWITTER\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweets_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet_refresher\",\n        onClick: fetchTweets,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"tweet_search_bar\",\n        type: \"text\",\n        placeholder: \"Filter tweets\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweets_container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.isArray(currentTweets) && currentTweets.length > 0 ? currentTweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet_top\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tweet.image,\n              alt: \"#\",\n              className: \"profile_image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"username\",\n              href: \"http://www.x.com/\" + tweet.username,\n              children: [\"@\", tweet.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet_mid\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tweet_text\",\n              dangerouslySetInnerHTML: {\n                __html: highlightText(tweet.text, searchTerm)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet_bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tweet_time\",\n              children: formatDate(tweet.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"tweet_location\",\n              children: tweet.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet_mid\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no_match\",\n            children: \"No Tweets match your filters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Twitter, \"vq/Q8WpOlMlUdeGCqEnQfN+px68=\");\n_c = Twitter;\nexport default Twitter;\nvar _c;\n$RefreshReg$(_c, \"Twitter\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Twitter","timeFrame","County","AccountType","onTweetsFetched","_s","tweets","setTweets","fetchTweets","fetch","headers","body","JSON","stringify","then","response","json","data","catch","error","console","searchTerm","setSearchTerm","highlightText","text","term","regex","RegExp","replace","match","filteredTweets","filter","tweet","toLowerCase","includes","currentPage","setCurrentPage","tweetsPerPage","indexOfLastTweet","indexOfFirstTweet","currentTweets","slice","totalPages","Math","ceil","length","formatDate","dateObj","isoDateString","hasOwnProperty","date","Date","isNaN","getTime","toLocaleDateString","year","month","day","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","Array","isArray","map","src","image","alt","href","username","dangerouslySetInnerHTML","__html","time","location","_c","$RefreshReg$"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/Twitter.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"../styling/Twitter.css\"\n\n\nfunction Twitter({timeFrame, County, AccountType, onTweetsFetched}) {\n    const [tweets, setTweets] = useState([]);\n\n    const fetchTweets = () => {\n        fetch('http://127.0.0.1:5000/get_tweets',\n            {\n                'method':'POST',\n                headers : {\n                    'Content-Type':'application/json'\n                },\n                body: JSON.stringify([timeFrame, County, AccountType])\n            })\n            .then((response) => response.json())\n            .then((data) => {\n                setTweets(data);\n                onTweetsFetched(data); // Call the callback function with the fetched tweets\n            })\n            .catch((error) => console.error(error));\n    };\n\n    useEffect(() => {\n        fetchTweets();\n    }, [timeFrame, County, AccountType]);\n\n\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const highlightText = (text, term) => {\n        const regex = new RegExp(term, 'gi');\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\n    };\n\n    const filteredTweets = tweets.filter((tweet) =>\n        tweet.text.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [tweetsPerPage] = useState(10); // Adjust the number of tweets per page as needed\n\n    const indexOfLastTweet = currentPage * tweetsPerPage;\n    const indexOfFirstTweet = indexOfLastTweet - tweetsPerPage;\n    const currentTweets = filteredTweets.slice(indexOfFirstTweet, indexOfLastTweet);\n    const totalPages = Math.ceil(filteredTweets.length / tweetsPerPage);\n\n\n    const formatDate = (dateObj) => {\n        let isoDateString;\n        if (typeof dateObj === 'object' && dateObj.hasOwnProperty('$date')) {\n            isoDateString = dateObj['$date'];\n        } else {\n            isoDateString = dateObj;\n        }\n\n        const date = new Date(isoDateString);\n        if (isNaN(date.getTime())) {\n            console.error(\"Invalid Date:\", isoDateString);\n            return \"Invalid Date\";\n        }\n\n        return date.toLocaleDateString(\"en-US\", {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        });\n    };\n    return(\n        <div>\n            TWITTER\n            <div className=\"tweets_header\">\n                <button className=\"tweet_refresher\" onClick={fetchTweets}>Refresh</button>\n                <input\n                    className=\"tweet_search_bar\"\n                    type=\"text\"\n                    placeholder=\"Filter tweets\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n\n            <div className=\"tweets_container\">\n                <ul>\n                    {Array.isArray(currentTweets) && currentTweets.length > 0 ? (\n                        currentTweets.map((tweet) => (\n                            <div className=\"tweet\">\n\n                                <div className=\"tweet_top\">\n                                    <img\n                                        src={tweet.image}\n                                        alt={\"#\"}\n                                        className=\"profile_image\"\n                                    />\n                                    <a className=\"username\" href={\"http://www.x.com/\" + tweet.username}>@{tweet.username}</a>\n                                </div>\n\n                                <div className=\"tweet_mid\">\n                                    <p\n                                        className=\"tweet_text\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: highlightText(tweet.text, searchTerm),\n                                        }}\n                                    ></p>\n                                </div>\n\n                                <div className=\"tweet_bottom\">\n                                    <p className=\"tweet_time\">{formatDate(tweet.time)}</p>\n                                    <p className=\"tweet_location\">{tweet.location}</p>\n                                </div>\n\n                            </div>\n                        ))\n                    ) : (\n                        <div className=\"tweet_mid\">\n\n                            <p className=\"no_match\">No Tweets match your filters.</p>\n                        </div>\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Twitter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}