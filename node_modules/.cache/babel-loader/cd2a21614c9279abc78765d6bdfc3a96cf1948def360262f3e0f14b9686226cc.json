{"ast":null,"code":"var _jsxFileName = \"/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/FloridaMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport floridaCounties from './geojson-fl-counties-fips.json';\nimport \"../styling/FloridaMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloridaMap = ({\n  userSelectedCounty,\n  tweetCounts\n}) => {\n  _s();\n  const [, setHighlightedCounty] = useState(null);\n  console.log(tweetCounts);\n  const normalizeTweetCounts = tweetCounts => {\n    const maxCount = Math.max(...Object.values(tweetCounts));\n    const normalizedCounts = {};\n    for (const county in tweetCounts) {\n      normalizedCounts[county] = tweetCounts[county] / maxCount;\n    }\n    return normalizedCounts;\n  };\n  const normalizedTweetCounts = normalizeTweetCounts(tweetCounts);\n  const getColor = normalizedCount => {\n    const intensity = Math.round(255 * normalizedCount);\n    return `rgb(${255 - intensity}, ${80}, ${80})`; // Example: adjust RGB values as needed\n  };\n  const style = feature => {\n    const countyName = feature.properties.NAME;\n    const tweetCount = normalizedTweetCounts[countyName] || 0;\n    const fillColor = getColor(tweetCount);\n    return {\n      fillColor: fillColor,\n      fillOpacity: 0.9,\n      color: 'white',\n      weight: 1\n    };\n  };\n  const [hoverInfo, setHoverInfo] = useState({\n    show: false,\n    county: '',\n    x: 0,\n    y: 0\n  });\n  const onEachFeature = (feature, layer) => {\n    layer.on('mouseover', e => {\n      const {\n        layerX,\n        layerY\n      } = e.originalEvent;\n      setHoverInfo({\n        show: true,\n        county: feature.properties.NAME,\n        x: layerX,\n        y: layerY\n      });\n    });\n    layer.on('mouseout', () => {\n      setHoverInfo({\n        show: false,\n        county: '',\n        x: 0,\n        y: 0\n      });\n    });\n    layer.on('click', () => {\n      console.log(hoverInfo.county);\n    });\n  };\n  useEffect(() => {\n    if (userSelectedCounty) {\n      if (userSelectedCounty !== \"All\") {\n        setHighlightedCounty(userSelectedCounty);\n      }\n    } else {\n      setHighlightedCounty(null);\n    }\n  }, [userSelectedCounty]);\n\n  // return (\n  //     <div className=\"map_div\">\n  //         <MapContainer center={[27.766279, -82.686783]} zoom={8} style={{ height: 650, width: '100%' }}>\n  //             <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n  //             <GeoJSON\n  //                 data={floridaCounties}\n  //                 style={style}\n  //             />\n  //         </MapContainer>\n  //     </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_div\",\n    children: [hoverInfo.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-hover-popup\",\n      style: {\n        left: hoverInfo.x,\n        top: hoverInfo.y\n      },\n      children: [hoverInfo.county, \" - Tweets: \", tweetCounts[hoverInfo.county] || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [27.766279, -82.686783],\n      zoom: 8,\n      style: {\n        height: 650,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: floridaCounties,\n        style: style,\n        onEachFeature: onEachFeature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(FloridaMap, \"+xFGdWZqE+oLgQYMuxxaaZ3+9bU=\");\n_c = FloridaMap;\nexport default FloridaMap;\nvar _c;\n$RefreshReg$(_c, \"FloridaMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","floridaCounties","jsxDEV","_jsxDEV","FloridaMap","userSelectedCounty","tweetCounts","_s","setHighlightedCounty","console","log","normalizeTweetCounts","maxCount","Math","max","Object","values","normalizedCounts","county","normalizedTweetCounts","getColor","normalizedCount","intensity","round","style","feature","countyName","properties","NAME","tweetCount","fillColor","fillOpacity","color","weight","hoverInfo","setHoverInfo","show","x","y","onEachFeature","layer","on","e","layerX","layerY","originalEvent","className","children","left","top","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","height","width","url","data","_c","$RefreshReg$"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/FloridaMap.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {MapContainer, TileLayer, GeoJSON} from 'react-leaflet';\nimport floridaCounties from './geojson-fl-counties-fips.json';\nimport \"../styling/FloridaMap.css\"\n\n\nconst FloridaMap = ({ userSelectedCounty, tweetCounts }) => {\n    const [, setHighlightedCounty] = useState(null);\n\n    console.log(tweetCounts)\n\n    const normalizeTweetCounts = (tweetCounts) => {\n        const maxCount = Math.max(...Object.values(tweetCounts));\n        const normalizedCounts = {};\n\n        for (const county in tweetCounts) {\n            normalizedCounts[county] = tweetCounts[county] / maxCount;\n        }\n\n        return normalizedCounts;\n    };\n\n    const normalizedTweetCounts = normalizeTweetCounts(tweetCounts);\n\n    const getColor = (normalizedCount) => {\n        const intensity = Math.round(255 * normalizedCount);\n        return `rgb(${255 - intensity}, ${80}, ${80})`; // Example: adjust RGB values as needed\n    };\n\n    const style = (feature) => {\n        const countyName = feature.properties.NAME;\n        const tweetCount = normalizedTweetCounts[countyName] || 0;\n        const fillColor = getColor(tweetCount);\n\n        return {\n            fillColor: fillColor,\n            fillOpacity: 0.9,\n            color: 'white',\n            weight: 1,\n        };\n    };\n\n    const [hoverInfo, setHoverInfo] = useState({ show: false, county: '', x: 0, y: 0 });\n    const onEachFeature = (feature, layer) => {\n        layer.on('mouseover', (e) => {\n            const { layerX, layerY } = e.originalEvent;\n            setHoverInfo({ show: true, county: feature.properties.NAME, x: layerX, y: layerY });\n        });\n\n        layer.on('mouseout', () => {\n            setHoverInfo({ show: false, county: '', x: 0, y: 0 });\n        });\n\n        layer.on('click', () => {\n            console.log(hoverInfo.county)\n        })\n    };\n\n\n    useEffect(() => {\n        if (userSelectedCounty) {\n            if (userSelectedCounty !== \"All\") {\n                setHighlightedCounty(userSelectedCounty);\n            }\n        } else {\n            setHighlightedCounty(null);\n        }\n    }, [userSelectedCounty]);\n\n    // return (\n    //     <div className=\"map_div\">\n    //         <MapContainer center={[27.766279, -82.686783]} zoom={8} style={{ height: 650, width: '100%' }}>\n    //             <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    //             <GeoJSON\n    //                 data={floridaCounties}\n    //                 style={style}\n    //             />\n    //         </MapContainer>\n    //     </div>\n    // );\n\n    return (\n        <div className=\"map_div\">\n            {hoverInfo.show && (\n                <div\n                    className=\"map-hover-popup\"\n                    style={{ left: hoverInfo.x, top: hoverInfo.y }}\n                >\n                    {hoverInfo.county} - Tweets: {tweetCounts[hoverInfo.county] || 0}\n                </div>\n            )}\n            <MapContainer center={[27.766279, -82.686783]} zoom={8} style={{ height: 650, width: '100%' }}>\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                <GeoJSON\n                    data={floridaCounties}\n                    style={style}\n                    onEachFeature={onEachFeature}\n                />\n            </MapContainer>\n\n        </div>\n    );\n};\n\n\nexport default FloridaMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}