{"ast":null,"code":"import React,{useEffect,useState}from'react';import{MapContainer,TileLayer,GeoJSON}from'react-leaflet';import floridaCounties from'./geojson-fl-counties-fips.json';import\"../styling/FloridaMap.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const FloridaMap=_ref=>{let{userSelectedCounty,tweetCounts}=_ref;const[,setHighlightedCounty]=useState(null);const normalizeTweetCounts=tweetCounts=>{const maxCount=Math.max(...Object.values(tweetCounts));const normalizedCounts={};for(const county in tweetCounts){normalizedCounts[county]=tweetCounts[county]/maxCount;}return normalizedCounts;};const normalizedTweetCounts=normalizeTweetCounts(tweetCounts);const getColor=normalizedCount=>{const intensity=Math.round(255*normalizedCount);return\"rgb(\".concat(255-intensity,\", \",0,\", \",0,\")\");};const style=feature=>{const countyName=feature.properties.NAME;const tweetCount=normalizedTweetCounts[countyName]||0;const fillColor=getColor(tweetCount);return{fillColor:fillColor,fillOpacity:0.9,color:'white',weight:1};};const[hoverInfo,setHoverInfo]=useState({show:false,county:'',x:0,y:0});const onEachFeature=(county,layer)=>{layer.on('mouseover',function(e){const mapContainerRect=document.querySelector('.map_div').getBoundingClientRect();const x=e.originalEvent.clientX-mapContainerRect.left;const y=e.originalEvent.clientY-mapContainerRect.top;setHoverInfo({show:true,county:county.properties.NAME,x:x,y:y});});layer.on('mouseout',function(){setHoverInfo({show:false,county:'',x:0,y:0});});};useEffect(()=>{if(userSelectedCounty){if(userSelectedCounty!==\"All\"){setHighlightedCounty(userSelectedCounty);}}else{setHighlightedCounty(null);}},[userSelectedCounty]);// return (\n//     <div className=\"map_div\">\n//         <MapContainer center={[27.766279, -82.686783]} zoom={8} style={{ height: 650, width: '100%' }}>\n//             <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n//             <GeoJSON\n//                 data={floridaCounties}\n//                 style={style}\n//             />\n//         </MapContainer>\n//     </div>\n// );\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"map_div\",children:[/*#__PURE__*/_jsxs(MapContainer,{center:[27.766279,-82.686783],zoom:8,style:{height:650,width:'100%'},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),/*#__PURE__*/_jsx(GeoJSON,{data:floridaCounties,style:style,onEachFeature:onEachFeature})]}),hoverInfo.show&&/*#__PURE__*/_jsxs(\"div\",{className:\"map-hover-popup\",style:{left:hoverInfo.x+900,top:hoverInfo.y+200},children:[hoverInfo.county,\" - Tweets: \",tweetCounts[hoverInfo.county]||0]})]});};export default FloridaMap;","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","floridaCounties","jsx","_jsx","jsxs","_jsxs","FloridaMap","_ref","userSelectedCounty","tweetCounts","setHighlightedCounty","normalizeTweetCounts","maxCount","Math","max","Object","values","normalizedCounts","county","normalizedTweetCounts","getColor","normalizedCount","intensity","round","concat","style","feature","countyName","properties","NAME","tweetCount","fillColor","fillOpacity","color","weight","hoverInfo","setHoverInfo","show","x","y","onEachFeature","layer","on","e","mapContainerRect","document","querySelector","getBoundingClientRect","originalEvent","clientX","left","clientY","top","className","children","center","zoom","height","width","url","data"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/FloridaMap.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {MapContainer, TileLayer, GeoJSON} from 'react-leaflet';\nimport floridaCounties from './geojson-fl-counties-fips.json';\nimport \"../styling/FloridaMap.css\"\n\n\nconst FloridaMap = ({ userSelectedCounty, tweetCounts }) => {\n    const [, setHighlightedCounty] = useState(null);\n\n    const normalizeTweetCounts = (tweetCounts) => {\n        const maxCount = Math.max(...Object.values(tweetCounts));\n        const normalizedCounts = {};\n\n        for (const county in tweetCounts) {\n            normalizedCounts[county] = tweetCounts[county] / maxCount;\n        }\n\n        return normalizedCounts;\n    };\n\n    const normalizedTweetCounts = normalizeTweetCounts(tweetCounts);\n\n    const getColor = (normalizedCount) => {\n        const intensity = Math.round(255 * normalizedCount);\n        return `rgb(${255 - intensity}, ${0}, ${0})`;\n    };\n\n    const style = (feature) => {\n        const countyName = feature.properties.NAME;\n        const tweetCount = normalizedTweetCounts[countyName] || 0;\n        const fillColor = getColor(tweetCount);\n\n        return {\n            fillColor: fillColor,\n            fillOpacity: 0.9,\n            color: 'white',\n            weight: 1,\n        };\n    };\n\n    const [hoverInfo, setHoverInfo] = useState({ show: false, county: '', x: 0, y: 0 });\n    const onEachFeature = (county, layer) => {\n        layer.on('mouseover', function (e) {\n            const mapContainerRect = document.querySelector('.map_div').getBoundingClientRect();\n            const x = e.originalEvent.clientX - mapContainerRect.left;\n            const y = e.originalEvent.clientY - mapContainerRect.top;\n            setHoverInfo({ show: true, county: county.properties.NAME, x: x, y: y });\n        });\n\n        layer.on('mouseout', function () {\n            setHoverInfo({ show: false, county: '', x: 0, y: 0 });\n        });\n    };\n\n\n    useEffect(() => {\n        if (userSelectedCounty) {\n            if (userSelectedCounty !== \"All\") {\n                setHighlightedCounty(userSelectedCounty);\n            }\n        } else {\n            setHighlightedCounty(null);\n        }\n    }, [userSelectedCounty]);\n\n    // return (\n    //     <div className=\"map_div\">\n    //         <MapContainer center={[27.766279, -82.686783]} zoom={8} style={{ height: 650, width: '100%' }}>\n    //             <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    //             <GeoJSON\n    //                 data={floridaCounties}\n    //                 style={style}\n    //             />\n    //         </MapContainer>\n    //     </div>\n    // );\n\n    return (\n        <div className=\"map_div\">\n            <MapContainer center={[27.766279, -82.686783]} zoom={8} style={{ height: 650, width: '100%' }}>\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                <GeoJSON\n                    data={floridaCounties}\n                    style={style}\n                    onEachFeature={onEachFeature}\n                />\n            </MapContainer>\n            {hoverInfo.show && (\n                <div\n                    className=\"map-hover-popup\"\n                    style={{ left: hoverInfo.x+900, top: hoverInfo.y+200 }}\n                >\n                    {hoverInfo.county} - Tweets: {tweetCounts[hoverInfo.county] || 0}\n                </div>\n            )}\n\n        </div>\n    );\n};\n\n\nexport default FloridaMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}