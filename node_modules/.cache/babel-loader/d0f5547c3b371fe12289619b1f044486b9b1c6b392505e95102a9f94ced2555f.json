{"ast":null,"code":"import React,{useState}from\"react\";import TimeFrameSelector from\"./TimeFrameSelector\";import DropDown from\"./DropDown\";import Twitter from\"./Twitter\";import\"../styling/Body.css\";import WordCloud from\"./WordCloud\";import FloridaMap from\"./FloridaMap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Body(){const Account_Type_Options=[\"All\",\"Academic\",\"Government\",\"Media\",\"Other\",\"Tourism\"];const County_Options=[\"All\",\"Pasco\",\"Pinellas\",\"Hillsborough\",\"Manatee\",\"Sarasota\"];const Word_Cloud_Options=[\"Geo Tags\",\"Non-Geo Tags\"];const[SelectedTimeFrame,setTimeFrame]=useState(\"\");const[SelectedAccountType,setAccountType]=useState(\"\");const[SelectedWordCloudOption,setWordCloudOption]=useState(\"\");const[SelectedCountyOption,setCountyOption]=useState(\"\");const[tweets,setTweets]=useState([]);const[tweetCounts,setTweetCounts]=useState([]);const handleTweets=newTweets=>{setTweets(newTweets);};const handleTimeFrameChange=(start,end)=>{setTimeFrame(start+\" \"+end);};const handleTweetsCounts=counts=>{setTweetCounts(counts);};const callback=(value,context)=>{switch(context){case\"WordCloudOption\":setWordCloudOption(value);console.log(\"Word Cloud Option selected:\",value);break;case\"CountyOption\":setCountyOption(value);console.log(\"County Option selected:\",value);break;case\"AccountTypeOption\":setAccountType(value);console.log(\"Account Type Option selected:\",value);break;default:break;}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter_menus\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filter_item\",children:/*#__PURE__*/_jsx(TimeFrameSelector,{onTimeFrameChange:handleTimeFrameChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"filter_item\",children:/*#__PURE__*/_jsx(DropDown,{options:Account_Type_Options,title:\"AccountTypeOption\",callback:value=>callback(value,\"AccountTypeOption\")})}),/*#__PURE__*/_jsx(\"div\",{className:\"filter_item\",children:/*#__PURE__*/_jsx(DropDown,{callback:value=>callback(value,\"CountyOption\"),title:\"Select County\",options:County_Options})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App_Body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"twitter_container\",children:/*#__PURE__*/_jsx(Twitter,{timeFrame:SelectedTimeFrame,County:SelectedCountyOption,AccountType:SelectedAccountType,onTweetsFetched:handleTweets})}),/*#__PURE__*/_jsx(\"div\",{className:\"word_cloud_container\",children:/*#__PURE__*/_jsx(WordCloud,{tweets:tweets,cloud_type:\"Non-Geo Tags\",onTweetsFetched:handleTweetsCounts})}),/*#__PURE__*/_jsx(\"div\",{className:\"Florida_map\",children:/*#__PURE__*/_jsx(FloridaMap,{userSelectedCounty:SelectedCountyOption,tweetCounts:tweetCounts})})]})]});}export default Body;","map":{"version":3,"names":["React","useState","TimeFrameSelector","DropDown","Twitter","WordCloud","FloridaMap","jsx","_jsx","jsxs","_jsxs","Body","Account_Type_Options","County_Options","Word_Cloud_Options","SelectedTimeFrame","setTimeFrame","SelectedAccountType","setAccountType","SelectedWordCloudOption","setWordCloudOption","SelectedCountyOption","setCountyOption","tweets","setTweets","tweetCounts","setTweetCounts","handleTweets","newTweets","handleTimeFrameChange","start","end","handleTweetsCounts","counts","callback","value","context","console","log","children","className","onTimeFrameChange","options","title","timeFrame","County","AccountType","onTweetsFetched","cloud_type","userSelectedCounty"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/Body.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport TimeFrameSelector from \"./TimeFrameSelector\";\nimport DropDown from \"./DropDown\";\nimport Twitter from \"./Twitter\";\nimport \"../styling/Body.css\"\nimport WordCloud from \"./WordCloud\";\nimport FloridaMap from \"./FloridaMap\";\n\n\n\n\nfunction Body() {\n\n    const Account_Type_Options = [\"All\", \"Academic\", \"Government\", \"Media\", \"Other\", \"Tourism\"]\n    const County_Options = [\"All\", \"Pasco\", \"Pinellas\", \"Hillsborough\", \"Manatee\", \"Sarasota\"]\n    const Word_Cloud_Options = [\"Geo Tags\", \"Non-Geo Tags\"]\n\n    const [SelectedTimeFrame, setTimeFrame] = useState(\"\")\n    const [SelectedAccountType, setAccountType] = useState(\"\")\n    const [SelectedWordCloudOption, setWordCloudOption] = useState(\"\")\n    const [SelectedCountyOption, setCountyOption] = useState(\"\")\n\n    const [tweets, setTweets] = useState([]);\n    const [tweetCounts, setTweetCounts] = useState([]);\n\n\n    const handleTweets = (newTweets) => {\n        setTweets(newTweets);\n    };\n\n    const handleTimeFrameChange = (start, end) => {\n        setTimeFrame(start + \" \" + end)\n    };\n\n    const handleTweetsCounts = (counts) =>\n    {\n        setTweetCounts(counts)\n    }\n\n\n    const callback = (value, context) => {\n        switch (context) {\n            case \"WordCloudOption\":\n                setWordCloudOption(value)\n                console.log(\"Word Cloud Option selected:\", value);\n                break;\n            case \"CountyOption\":\n                setCountyOption(value)\n                console.log(\"County Option selected:\", value);\n                break;\n            case \"AccountTypeOption\":\n                setAccountType(value)\n                console.log(\"Account Type Option selected:\", value);\n                break;\n            default:\n                break;\n        }\n    };\n\n    return(\n        <div>\n\n            <div className=\"filter_menus\">\n                <div className=\"filter_item\">\n                    <TimeFrameSelector onTimeFrameChange={handleTimeFrameChange}/>\n                </div>\n                <div className=\"filter_item\">\n                    <DropDown options={Account_Type_Options}\n                              title={\"AccountTypeOption\"}\n                              callback={(value) => callback(value, \"AccountTypeOption\")}/>\n                </div>\n                <div className=\"filter_item\">\n                    <DropDown\n                        callback={(value) => callback(value, \"CountyOption\")}\n                        title=\"Select County\"\n                        options={County_Options}\n                    />\n                </div>\n\n            </div>\n\n            <div className=\"App_Body\">\n                <div className=\"twitter_container\">\n                    <Twitter timeFrame={SelectedTimeFrame} County={SelectedCountyOption} AccountType={SelectedAccountType} onTweetsFetched={handleTweets}/>\n                </div>\n\n                <div className=\"word_cloud_container\">\n                    <WordCloud tweets={tweets} cloud_type={\"Non-Geo Tags\"} onTweetsFetched={handleTweetsCounts}/>\n                </div>\n\n                <div className=\"Florida_map\">\n                    <FloridaMap userSelectedCounty={SelectedCountyOption} tweetCounts={tweetCounts}/>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Body"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}