{"ast":null,"code":"var _jsxFileName = \"/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/FloridaMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport floridaCounties from './geojson-fl-counties-fips.json';\nimport \"../styling/FloridaMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloridaMap = ({\n  userSelectedCounty\n}) => {\n  _s();\n  const [highlightedCounty, setHighlightedCounty] = React.useState(null);\n  const style = feature => {\n    if (feature.properties.NAME === userSelectedCounty) {\n      return {\n        fillColor: 'red',\n        weight: 2,\n        opacity: 1,\n        color: 'white'\n      };\n    }\n    return {\n      fillColor: 'blue',\n      weight: 2,\n      opacity: 1,\n      color: 'white'\n    };\n  };\n  useEffect(() => {\n    if (userSelectedCounty) {\n      setHighlightedCounty(userSelectedCounty);\n    } else {\n      setHighlightedCounty(null);\n    }\n  }, [userSelectedCounty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_div\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [27.766279, -86.798],\n      zoom: 6,\n      style: {\n        height: 600,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: floridaCounties,\n        style: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(FloridaMap, \"ykpC1ezTp9Bg58Xes3Pu4bpyy+Q=\");\n_c = FloridaMap;\nexport default FloridaMap;\nvar _c;\n$RefreshReg$(_c, \"FloridaMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","floridaCounties","jsxDEV","_jsxDEV","FloridaMap","userSelectedCounty","_s","highlightedCounty","setHighlightedCounty","style","feature","properties","NAME","fillColor","weight","opacity","color","className","children","center","zoom","height","width","url","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/FloridaMap.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {MapContainer, TileLayer, GeoJSON} from 'react-leaflet';\nimport floridaCounties from './geojson-fl-counties-fips.json';\nimport \"../styling/FloridaMap.css\"\n\n\nconst FloridaMap = ({ userSelectedCounty }) => {\n    const [highlightedCounty, setHighlightedCounty] = React.useState(null);\n\n    const style = (feature) => {\n        if (feature.properties.NAME === userSelectedCounty) {\n            return {\n                fillColor: 'red',\n                weight: 2,\n                opacity: 1,\n                color: 'white',\n            };\n        }\n        return {\n            fillColor: 'blue',\n            weight: 2,\n            opacity: 1,\n            color: 'white',\n        };\n    };\n\n    useEffect(() => {\n        if (userSelectedCounty) {\n            setHighlightedCounty(userSelectedCounty);\n        } else {\n            setHighlightedCounty(null);\n        }\n    }, [userSelectedCounty]);\n\n    return (\n        <div className=\"map_div\">\n            <MapContainer center={[27.766279, -86.798]} zoom={6} style={{ height: 600, width: '100%' }}>\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                <GeoJSON data={floridaCounties} style={style} />\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default FloridaMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAO,eAAe;AAC9D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,KAAK,CAACE,QAAQ,CAAC,IAAI,CAAC;EAEtE,MAAMY,KAAK,GAAIC,OAAO,IAAK;IACvB,IAAIA,OAAO,CAACC,UAAU,CAACC,IAAI,KAAKP,kBAAkB,EAAE;MAChD,OAAO;QACHQ,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE,CAAC;QACVC,KAAK,EAAE;MACX,CAAC;IACL;IACA,OAAO;MACHH,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,IAAIS,kBAAkB,EAAE;MACpBG,oBAAoB,CAACH,kBAAkB,CAAC;IAC5C,CAAC,MAAM;MACHG,oBAAoB,CAAC,IAAI,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACH,kBAAkB,CAAC,CAAC;EAExB,oBACIF,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBf,OAAA,CAACL,YAAY;MAACqB,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC,MAAM,CAAE;MAACC,IAAI,EAAE,CAAE;MAACX,KAAK,EAAE;QAAEY,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBACvFf,OAAA,CAACJ,SAAS;QAACwB,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtExB,OAAA,CAACH,OAAO;QAAC4B,IAAI,EAAE3B,eAAgB;QAACQ,KAAK,EAAEA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAACrB,EAAA,CApCIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}