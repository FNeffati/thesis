{"ast":null,"code":"var _jsxFileName = \"/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TimeFrameSelector from \"./TimeFrameSelector\";\nimport DropDown from \"./DropDown\";\nimport Twitter from \"./Twitter\";\nimport \"../styling/Body.css\";\nimport WordCloud from \"./WordCloud\";\nimport FloridaMap from \"./FloridaMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body() {\n  _s();\n  const Account_Type_Options = [\"All\", \"Academic\", \"Government\", \"Media\", \"Other\", \"Tourism\"];\n  const County_Options = [\"All\", \"Pasco\", \"Pinellas\", \"Hillsborough\", \"Manatee\", \"Sarasota\"];\n  const Word_Cloud_Options = [\"Geo Tags\", \"Non-Geo Tags\"];\n  const [SelectedTimeFrame, setTimeFrame] = useState(\"\");\n  const [SelectedAccountType, setAccountType] = useState(\"\");\n  const [SelectedWordCloudOption, setWordCloudOption] = useState(\"\");\n  const [SelectedCountyOption, setCountyOption] = useState(\"\");\n  const [tweets, setTweets] = useState([]);\n  let maxCount = Math.max(...tweets.values());\n  let normalizedCounts = new Map();\n  tweets.forEach((count, county) => {\n    normalizedCounts.set(county, count / maxCount);\n  });\n  let normalizedCountsJSON = Object.fromEntries(normalizedCounts);\n  const handleTweets = newTweets => {\n    setTweets(newTweets);\n  };\n  const handleTimeFrameChange = (start, end) => {\n    setTimeFrame(start + \" \" + end);\n  };\n  const callback = (value, context) => {\n    switch (context) {\n      case \"WordCloudOption\":\n        setWordCloudOption(value);\n        console.log(\"Word Cloud Option selected:\", value);\n        break;\n      case \"CountyOption\":\n        setCountyOption(value);\n        console.log(\"County Option selected:\", value);\n        break;\n      case \"AccountTypeOption\":\n        setAccountType(value);\n        console.log(\"Account Type Option selected:\", value);\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_menus\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_item\",\n        children: /*#__PURE__*/_jsxDEV(TimeFrameSelector, {\n          onTimeFrameChange: handleTimeFrameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_item\",\n        children: /*#__PURE__*/_jsxDEV(DropDown, {\n          options: Account_Type_Options,\n          title: \"AccountTypeOption\",\n          callback: value => callback(value, \"AccountTypeOption\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_item\",\n        children: /*#__PURE__*/_jsxDEV(DropDown, {\n          callback: value => callback(value, \"CountyOption\"),\n          title: \"Select County\",\n          options: County_Options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_Body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twitter_container\",\n        children: /*#__PURE__*/_jsxDEV(Twitter, {\n          timeFrame: SelectedTimeFrame,\n          County: SelectedCountyOption,\n          AccountType: SelectedAccountType,\n          onTweetsFetched: handleTweets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word_cloud_container\",\n        children: /*#__PURE__*/_jsxDEV(WordCloud, {\n          tweets: tweets,\n          cloud_type: \"Non-Geo Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Florida_map\",\n        children: /*#__PURE__*/_jsxDEV(FloridaMap, {\n          userSelectedCounty: SelectedCountyOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Body, \"WBnpyRnSe/37ryqDr6FUJ+9NnIk=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","TimeFrameSelector","DropDown","Twitter","WordCloud","FloridaMap","jsxDEV","_jsxDEV","Body","_s","Account_Type_Options","County_Options","Word_Cloud_Options","SelectedTimeFrame","setTimeFrame","SelectedAccountType","setAccountType","SelectedWordCloudOption","setWordCloudOption","SelectedCountyOption","setCountyOption","tweets","setTweets","maxCount","Math","max","values","normalizedCounts","Map","forEach","count","county","set","normalizedCountsJSON","Object","fromEntries","handleTweets","newTweets","handleTimeFrameChange","start","end","callback","value","context","console","log","children","className","onTimeFrameChange","fileName","_jsxFileName","lineNumber","columnNumber","options","title","timeFrame","County","AccountType","onTweetsFetched","cloud_type","userSelectedCounty","_c","$RefreshReg$"],"sources":["/Users/fneffati/Documents/Classes/Thesis/tbenvdash/src/components/Body.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport TimeFrameSelector from \"./TimeFrameSelector\";\nimport DropDown from \"./DropDown\";\nimport Twitter from \"./Twitter\";\nimport \"../styling/Body.css\"\nimport WordCloud from \"./WordCloud\";\nimport FloridaMap from \"./FloridaMap\";\n\n\n\n\nfunction Body() {\n\n    const Account_Type_Options = [\"All\", \"Academic\", \"Government\", \"Media\", \"Other\", \"Tourism\"]\n    const County_Options = [\"All\", \"Pasco\", \"Pinellas\", \"Hillsborough\", \"Manatee\", \"Sarasota\"]\n    const Word_Cloud_Options = [\"Geo Tags\", \"Non-Geo Tags\"]\n\n    const [SelectedTimeFrame, setTimeFrame] = useState(\"\")\n    const [SelectedAccountType, setAccountType] = useState(\"\")\n    const [SelectedWordCloudOption, setWordCloudOption] = useState(\"\")\n    const [SelectedCountyOption, setCountyOption] = useState(\"\")\n\n    const [tweets, setTweets] = useState([]);\n\n    let maxCount = Math.max(...tweets.values());\n    let normalizedCounts = new Map();\n\n    tweets.forEach((count, county) => {\n        normalizedCounts.set(county, count / maxCount);\n    });\n    let normalizedCountsJSON = Object.fromEntries(normalizedCounts);\n\n    const handleTweets = (newTweets) => {\n        setTweets(newTweets);\n    };\n\n    const handleTimeFrameChange = (start, end) => {\n        setTimeFrame(start + \" \" + end)\n    };\n\n\n    const callback = (value, context) => {\n        switch (context) {\n            case \"WordCloudOption\":\n                setWordCloudOption(value)\n                console.log(\"Word Cloud Option selected:\", value);\n                break;\n            case \"CountyOption\":\n                setCountyOption(value)\n                console.log(\"County Option selected:\", value);\n                break;\n            case \"AccountTypeOption\":\n                setAccountType(value)\n                console.log(\"Account Type Option selected:\", value);\n                break;\n            default:\n                break;\n        }\n    };\n\n    return(\n        <div>\n\n            <div className=\"filter_menus\">\n                <div className=\"filter_item\">\n                    <TimeFrameSelector onTimeFrameChange={handleTimeFrameChange}/>\n                </div>\n                <div className=\"filter_item\">\n                    <DropDown options={Account_Type_Options}\n                              title={\"AccountTypeOption\"}\n                              callback={(value) => callback(value, \"AccountTypeOption\")}/>\n                </div>\n                <div className=\"filter_item\">\n                    <DropDown\n                        callback={(value) => callback(value, \"CountyOption\")}\n                        title=\"Select County\"\n                        options={County_Options}\n                    />\n                </div>\n\n            </div>\n\n            <div className=\"App_Body\">\n                <div className=\"twitter_container\">\n                    <Twitter timeFrame={SelectedTimeFrame} County={SelectedCountyOption} AccountType={SelectedAccountType} onTweetsFetched={handleTweets}/>\n                </div>\n\n                <div className=\"word_cloud_container\">\n                    <WordCloud tweets={tweets} cloud_type={\"Non-Geo Tags\"}/>\n                </div>\n\n                <div className=\"Florida_map\">\n                    <FloridaMap userSelectedCounty={SelectedCountyOption}/>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Body"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}